-*- org -*-

* Program
** TODO Write dependencies to tempfile, finalize when build is done
** TODO Add source dependencies
** TODO Dependencies
** TODO More thorough is_mother() tests
   Should be able to detect an inconsistent state and abort. I.e. it should
   check *all* parent/child variables, and return true/false if they're all set
   or unset and abort with an error message if there's something inconsistent
   about them.
** TODO Automatic adding of buildscript as target dependency
** TODO Automatic unlocking of stale lockfile
* Testing
** TODO Test metadata contents
   Add a function to the end of 'dashtap.sh' which can create the expected
   content for the metadata file, given the names of the files which should be
   in there.

   In (some of?) the failing cases we'll need to generate this before running
   the actual tests.
** TODO 'test_init' should set state dir root
   '.fix/state' is the current state dir root, this should be exported in a
   variable from test_init so we won't have to change it in a hundred different
   test files if it ever changes.
** TODO Mooooaaar test cases!
** TODO Profiling the code (using Devel::NYTProf)
** TODO Test code coverage (Devel::Cover)
* FUTURE
** [0%] Parallel builds
*** TODO Make compatible job server?
*** TODO Writing build metadata in parallel
    When building with multiple targets, each target should build in parallel,
    and each should write its build metadata to a separate file. E.g. invoking
    `fix a.txt b.txt c.txt` from inside `above.txt.fix` should cause three
    temporary build metadata files to be written (one for each argument):

        above.txt--fixing.1      # tempfile of first target
        above.txt--fixing.2      # .. second target
        above.txt--fixing.3      # etc.

    Upon finalizing the build these should be concatenated by fix before being
    renamed to their permanent name, e.g. something like this:

        cat above.txt--fixing.1 \
            above.txt--fixing.2 \
            above.txt--fixing.3 >above.txt--fixing
        mv above.txt--fixing above.txt
* DONE
** DONE Tests should be run in tempdir
   CLOSED: [2014-07-07 Mon 00:28]
** DONE Eliminate name collision with lockfile                          :BUG:
   CLOSED: [2014-07-07 Mon 00:36]
   Moved build state metadata into dir '.fix/state', while the lockfile
   continues to be called 'lock.pid'.
** DONE Tests which uses pre-defined metadata
   CLOSED: [2014-07-07 Mon 09:11]
   I.e. a whole bunch of tests are based on a state where a target has already
   been built once. This should use stored metadata (which could be easily
   re-built in case the metadata format changes).
** DONE Clean up and systematize test scripts
   CLOSED: [2014-07-11 Fri 21:19]
   Descriptions in TESTS.txt as well as the scripts themselves.
** DONE Eliminate need for 'sleep 1'
   CLOSED: [2014-07-13 Sun 05:04]
   Instead move timestamp backwards for all relevant files. (Is this really
   needed, or covered by the current test cases?) Modify chtime function to
   work for this.

   Test time went down from 14 seconds to 2 seconds (with 20 tests).
** DONE Modified 'init_test' + added 'cpdir'
   CLOSED: [2014-07-26 Sat 21:45]
   'init_test' no longer helps in creating the directory structure of the
   test's tempdir. Instead this has to be done manually (which simplifies
   reading the test script, since you can immediately see which directories are
   created).

   Added help function 'cpdir' which simplifies copying the relevant data
   directories from the test script data dir.
** DONE Test scripts should use 'title'
   CLOSED: [2014-07-25 Sun 00:19]
** DONE Add test for descriptions in TESTS.txt
   CLOSED: [2014-08-18 Mon 02:38]
** DONE Support for SCRIPT|SOURCE|TAGET dirs in metadata
   CLOSED: [2015-10-27 Tue 08:58]
   Metadata now has a third word for each file, specifying whether the file is
   a SCRIPT (*.fix) file, SOURCE file (dependency declared with `fix
   --source`), or a TARGET file.

   This distinction is maintained in order to allow there three different types
   of files to be stored in different directories, and allowing the user to set
   these directories between invocations.
